{
  "swagger": "2.0",
  "info": {
    "title": "Shopping List API",
    "description": "API documentation for the Shopping List application",
    "version": "1.0.0"
  },
  "host": "localhost:5002",
  "basePath": "/api/v1/shopping-list/",
  "schemes": ["http", "https"],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "AuthToken": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header",
      "description": "The token for authentication"
    }
  },
  "security": [
    {
      "AuthToken": []
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["User Auth"],
        "description": "Create a new account",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data required to register the user. name should be all alphabets. The users should only enter their preferred password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" },
                "confirm_password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User successfully registered" },
          "400": { "description": "No data to register" },
          "409": { "description": "User or email already exists." },
          "500": { "description": "Server error." }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User Auth"],
        "description": "Login to account. This returns a token that should be sent with every request to the backend. The authorization should start with 'Bearer ${token}'",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data required to authenticate the user",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "No data to register" },
          "404": { "description": "No users found" },
          "500": { "description": "Server error" }
        }
      }
    },
    "/users/forgotPassword": {
      "post": {
        "tags": ["User Auth"],
        "description": "Request password reset.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Request password reset. All users accounts must have an already registered email address. No user input required. Just send the token sent in the verification email in the header field of this request. Verification token is valid for 10 minutes.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset password mail successfully sent to email address."
          },
          "404": { "description": "No matching user found." },
          "500": { "description": "Server error" }
        }
      }
    },
    "/users/resetPassword/{token}": {
      "patch": {
        "tags": ["User Auth"],
        "description": "Verify user email. All users accounts must have valid email addresses and therefore must be verified before continuing to login. No user input required. Just send the token sent in the verification email in the header field of this request. Verification token is valid for 10 minutes.",
        "consumes": ["application/json"],
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data required to register the user. name should be all alphabets. The users should only enter their preferred password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": { "type": "string" },
                "passwordConfirm": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password reset Successfully." },
          "404": { "description": "No matching user found." },
          "500": { "description": "Server error" }
        }
      }
    },
    "/users/updateMe/{id}": {
      "patch": {
        "tags": ["User Auth"],
        "description": "Update account information.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Data required to update the user information.",
            "schema": {
              "type": "object",
              "properties": {
                "updatedEmail": { "type": "string" },
                "updatedPassword": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "Successfully updated." },
          "400": { "description": "No data to register" },
          "404": { "description": "No user found." },
          "500": { "description": "Server error" }
        }
      }
    },

    "/users/deleteMe/{id}": {
      "delete": {
        "tags": ["User Auth"],
        "description": "Delete user information. User information will be deleted based on the userID from the token.",
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "Success" },
          "400": { "description": "Unable to authenticate token" },
          "401": { "description": "Access denied. No authorization found." },
          "404": { "description": "No matching user information" },
          "500": { "description": "Server error / invalid token" }
        }
      }
    }
  }
}
